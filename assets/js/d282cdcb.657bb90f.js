"use strict";(self.webpackChunknvm_docs=self.webpackChunknvm_docs||[]).push([[5912],{3905:function(t,e,r){r.d(e,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),u=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},l=function(t){var e=u(t.components);return n.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,l=o(t,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,c(c({ref:e},l),{},{components:r})):n.createElement(f,c({ref:e},l))}));function m(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,c=new Array(i);c[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,c[1]=o;for(var u=2;u<i;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6998:function(t,e,r){r.r(e),r.d(e,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),c=["components"],o={},s=void 0,u={unversionedId:"architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug",id:"architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug",title:"DIDRegistryWithBug",description:"Functions",source:"@site/docs/architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug.md",sourceDirName:"architecture/components/contracts/contracts/test/DIDRegistry",slug:"/architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug",permalink:"/docs/architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug",draft:!1,editUrl:"https://github.com/nevermined-io/nvm-docs/tree/main/docs/architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryWithBug.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DIDRegistryExtraFunctionality",permalink:"/docs/architecture/components/contracts/contracts/test/DIDRegistry/DIDRegistryExtraFunctionality"},next:{title:"IPNFT",permalink:"/docs/architecture/components/contracts/contracts/test/IPNFT"}},l={},p=[{value:"Functions",id:"functions",level:2},{value:"registerAttribute",id:"registerattribute",level:3},{value:"Parameters:",id:"parameters",level:4}],d={toc:p};function m(t){var e=t.components,r=(0,a.Z)(t,c);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"registerattribute"},"registerAttribute"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function registerAttribute(\n    bytes32 _didSeed,\n    bytes32 _checksum,\n    address[] _url\n  ) public returns (uint256 size)\n")),(0,i.kt)("p",null,"registerAttribute is called only by DID owner."),(0,i.kt)("p",null,"this function registers DID attributes"),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_didSeed")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"refers to decentralized identifier (a byte32 length ID)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_checksum")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"includes a one-way HASH calculated using the DDO content")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_url")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"refers to the attribute value")))))}m.isMDXComponent=!0}}]);