"use strict";(self.webpackChunknvm_docs=self.webpackChunknvm_docs||[]).push([[8121],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),d=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=a,v=m["".concat(o,".").concat(u)]||m[u]||p[u]||s;return n?r.createElement(v,i(i({ref:t},c),{},{components:n})):r.createElement(v,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<s;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8114:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=n(3117),a=n(102),s=(n(7294),n(3905)),i=["components"],l={},o=void 0,d={unversionedId:"architecture/components/catalog/core/modules/services_event",id:"architecture/components/catalog/core/modules/services_event",title:"services_event",description:"@nevermined-io/catalog-core / Modules / services/event",source:"@site/docs/architecture/components/catalog/core/modules/services_event.md",sourceDirName:"architecture/components/catalog/core/modules",slug:"/architecture/components/catalog/core/modules/services_event",permalink:"/docs/architecture/components/catalog/core/modules/services_event",draft:!1,editUrl:"https://github.com/nevermined-io/nvm-docs/tree/main/docs/architecture/components/catalog/core/modules/services_event.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"services_asset",permalink:"/docs/architecture/components/catalog/core/modules/services_asset"},next:{title:"services_subscribe",permalink:"/docs/architecture/components/catalog/core/modules/services_subscribe"}},c={},p=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Functions",id:"functions",level:3},{value:"Functions",id:"functions-1",level:2},{value:"getAssetRegisterEvent",id:"getassetregisterevent",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getTransfers",id:"gettransfers",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getUserFulfilledEvents",id:"getuserfulfilledevents",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getUserRegisterEvents",id:"getuserregisterevents",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4}],m={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/"},"@nevermined-io/catalog-core")," / ",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/modules"},"Modules")," / services/event"),(0,s.kt)("h1",{id:"module-servicesevent"},"Module: services/event"),(0,s.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,s.kt)("h3",{id:"functions"},"Functions"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/architecture/components/catalog/core/modules/services_event#getassetregisterevent"},"getAssetRegisterEvent")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/architecture/components/catalog/core/modules/services_event#gettransfers"},"getTransfers")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/architecture/components/catalog/core/modules/services_event#getuserfulfilledevents"},"getUserFulfilledEvents")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/architecture/components/catalog/core/modules/services_event#getuserregisterevents"},"getUserRegisterEvents"))),(0,s.kt)("h2",{id:"functions-1"},"Functions"),(0,s.kt)("h3",{id:"getassetregisterevent"},"getAssetRegisterEvent"),(0,s.kt)("p",null,"\u25b8 ",(0,s.kt)("strong",{parentName:"p"},"getAssetRegisterEvent"),"(",(0,s.kt)("inlineCode",{parentName:"p"},"did"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"graphUrl"),"): ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.RegisterEvent"},(0,s.kt)("inlineCode",{parentName:"a"},"RegisterEvent")),"[]",">"),(0,s.kt)("p",null,"Get asset registering event"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import Catalog from "@nevermined-io/catalog-core";\nimport { useState } from "react";\n\nconst MyComponent = () => {\n const [events, setEvents] = useState<Transfer[]>([]);\n const { getAssetRegisterEvent } = Catalog;\n const { sdk } = Catalog.useNevermined();\n\n useEffect(() => {\n     const handler = async () => {\n          const t: Transfer[] = await getAssetRegisterEvent(sdk, receiverAddress)          \n          setTransfers(t)\n     }\n }, [setEvents, sdk]);\n\n return (\n  <>\n     {events.map((p) => {\n         return (\n             <div>\n                 <div>{p._did}</div>\n                 <div>{p._owner}</div>\n                 <div>{p._lastUpdatedBy}</div>\n                 <div>{p._blockNumberUpdated}</div>\n             </div>\n         )\n     })}\n  </>\n )\n}\n')),(0,s.kt)("h4",{id:"parameters"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"did")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"string")),(0,s.kt)("td",{parentName:"tr",align:"left"},"assets did")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"graphUrl")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"string")),(0,s.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,s.kt)("h4",{id:"returns"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.RegisterEvent"},(0,s.kt)("inlineCode",{parentName:"a"},"RegisterEvent")),"[]",">"),(0,s.kt)("h4",{id:"defined-in"},"Defined in"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/nevermined-io/components-catalog/blob/bd89666/lib/src/services/event.ts#L245"},"src/services/event.ts:245")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"gettransfers"},"getTransfers"),(0,s.kt)("p",null,"\u25b8 ",(0,s.kt)("strong",{parentName:"p"},"getTransfers"),"(",(0,s.kt)("inlineCode",{parentName:"p"},"sdk"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"receiver"),"): ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.Transfer"},(0,s.kt)("inlineCode",{parentName:"a"},"Transfer")),"[]",">"),(0,s.kt)("p",null,"Get recieved transfers  by address"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import Catalog from "@nevermined-io/catalog-core";\nimport { useState } from "react";\n\nconst MyComponent = () => {\n const [transfers, setTransfers] = useState<Transfer[]>([]);\n const { getTransfers } = Catalog;\n const { sdk } = Catalog.useNevermined();\n\n useEffect(() => {\n     const handler = async () => {\n          const t: Transfer[] = await getTransfers(sdk, receiverAddress)          \n          setTransfers(t)\n     }\n }, [receiverAddress, sdk]);\n\n return (\n  <>\n     {transfers.map((p) => {\n         return (\n             <div>\n                 <div>{p.id}</div>\n                 <div>{p._did}</div>\n                 <div>{p._agreementId}</div>\n                 <div>{p._receiver}</div>\n             </div>\n         )\n     })}\n  </>\n )\n}\n')),(0,s.kt)("h4",{id:"parameters-1"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"sdk")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"Nevermined")),(0,s.kt)("td",{parentName:"tr",align:"left"},"Nevermined instance")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"receiver")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"string")),(0,s.kt)("td",{parentName:"tr",align:"left"},"transfers receiver address")))),(0,s.kt)("h4",{id:"returns-1"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.Transfer"},(0,s.kt)("inlineCode",{parentName:"a"},"Transfer")),"[]",">"),(0,s.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/nevermined-io/components-catalog/blob/bd89666/lib/src/services/event.ts#L43"},"src/services/event.ts:43")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"getuserfulfilledevents"},"getUserFulfilledEvents"),(0,s.kt)("p",null,"\u25b8 ",(0,s.kt)("strong",{parentName:"p"},"getUserFulfilledEvents"),"(",(0,s.kt)("inlineCode",{parentName:"p"},"sdk"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"account"),"): ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.FullfilledOrders"},(0,s.kt)("inlineCode",{parentName:"a"},"FullfilledOrders")),"[]",">"),(0,s.kt)("p",null,"Get fullfilled nft transfer events by user address"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import Catalog from "@nevermined-io/catalog-core";\nimport { useState } from "react";\n\nconst MyComponent = () => {\n const [events, setEvents] = useState<Transfer[]>([]);\n const { getUserFulfilledEvents } = Catalog;\n const { sdk } = Catalog.useNevermined();\n\n useEffect(() => {\n     const handler = async () => {\n          const t: Transfer[] = await getUserFulfilledEvents(sdk, receiverAddress)          \n          setTransfers(t)\n     }\n }, [setEvents, sdk]);\n\n return (\n  <>\n     {events.map((p) => {\n         return (\n             <div>\n                 <div>{p.id}</div>\n                 <div>{p._documentId}</div>\n             </div>\n         )\n     })}\n  </>\n )\n}\n')),(0,s.kt)("h4",{id:"parameters-2"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"sdk")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"Nevermined")),(0,s.kt)("td",{parentName:"tr",align:"left"},"Nevermined instance")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"account")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"string")),(0,s.kt)("td",{parentName:"tr",align:"left"},"user address")))),(0,s.kt)("h4",{id:"returns-2"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.FullfilledOrders"},(0,s.kt)("inlineCode",{parentName:"a"},"FullfilledOrders")),"[]",">"),(0,s.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/nevermined-io/components-catalog/blob/bd89666/lib/src/services/event.ts#L107"},"src/services/event.ts:107")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"getuserregisterevents"},"getUserRegisterEvents"),(0,s.kt)("p",null,"\u25b8 ",(0,s.kt)("strong",{parentName:"p"},"getUserRegisterEvents"),"(",(0,s.kt)("inlineCode",{parentName:"p"},"sdk"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"owner"),"): ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.RegisterEvent"},(0,s.kt)("inlineCode",{parentName:"a"},"RegisterEvent")),"[]",">"),(0,s.kt)("p",null,"Get nft creating events registered by user"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import Catalog from "@nevermined-io/catalog-core";\nimport { useState } from "react";\n\nconst MyComponent = () => {\n const [events, setEvents] = useState<Transfer[]>([]);\n const { getUserRegisterEvents } = Catalog;\n const { sdk } = Catalog.useNevermined();\n\n useEffect(() => {\n     const handler = async () => {\n          const t: Transfer[] = await getUserRegisterEvents(sdk, receiverAddress)          \n          setTransfers(t)\n     }\n }, [setEvents, sdk]);\n\n return (\n  <>\n     {events.map((p) => {\n         return (\n             <div>\n                 <div>{p.id}</div>\n                 <div>{p._did}</div>\n                 <div>{p._owner}</div>\n                 <div>{p._lastUpdatedBy}</div>\n                 <div>{p._blockNumberUpdated}</div>\n             </div>\n         )\n     })}\n  </>\n )\n}\n')),(0,s.kt)("h4",{id:"parameters-3"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"sdk")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"Nevermined")),(0,s.kt)("td",{parentName:"tr",align:"left"},"Nevermined instance")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"owner")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"string")),(0,s.kt)("td",{parentName:"tr",align:"left"},"user address of events publisher")))),(0,s.kt)("h4",{id:"returns-3"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/architecture/components/catalog/core/interfaces/index.RegisterEvent"},(0,s.kt)("inlineCode",{parentName:"a"},"RegisterEvent")),"[]",">"),(0,s.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/nevermined-io/components-catalog/blob/bd89666/lib/src/services/event.ts#L175"},"src/services/event.ts:175")))}u.isMDXComponent=!0}}]);