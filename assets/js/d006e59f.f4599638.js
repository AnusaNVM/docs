(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3775],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>m,kt:()=>p});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=c(n),p=o,h=d["".concat(s,".").concat(p)]||d[p]||u[p]||r;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(67294),o=n(86010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},65488:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var a=n(87462),o=n(67294),r=n(86010),i=n(72389),l=n(67392),s=n(7094),c=n(12466);const m="tabList__CuJ",u="tabItem_LNqP";function d(e){var t;const{lazy:n,block:i,defaultValue:d,values:p,groupId:h,className:g}=e,f=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,l.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===d?d:d??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==b&&!v.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,s.U)(),[C,M]=(0,o.useState)(b),T=[],{blockElementScrollPositionUntilNextRender:I}=(0,c.o5)();if(null!=h){const e=y[h];null!=e&&e!==C&&v.some((t=>t.value===e))&&M(e)}const N=e=>{const t=e.currentTarget,n=T.indexOf(t),a=v[n].value;a!==C&&(I(t),M(a),null!=h&&w(h,String(a)))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",m)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},g)},v.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>T.push(e),onKeyDown:x,onFocus:N,onClick:N},i,{className:(0,r.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":C===t})}),n??t)}))),n?(0,o.cloneElement)(f.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function p(e){const t=(0,i.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},64791:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>b,frontMatter:()=>p,metadata:()=>g,toc:()=>v});var a=n(87462),o=n(67294),r=n(3905),i=n(23660),l=n(76798);const s=(0,l.CY)("metamask",{metamask__content:"metamask__content_jABS"}),c=()=>{const{loginMetamask:e,walletAddress:t,logout:n}=i.MetaMask.useWallet();return o.createElement("div",{className:s("content")},t?o.createElement(o.Fragment,null,o.createElement(l.II,{type:"p",variants:["detail"]},t),o.createElement(l.wg,{type:"secondary",onClick:n},"Logout")):o.createElement(l.wg,{type:"secondary",onClick:e},"Connect to Metamask"))},m=()=>o.createElement(i.MetaMask.WalletProvider,{correctNetworkId:"0x13881",nodeUri:"https://rpc-mumbai.matic.today"},o.createElement(c,null));var u=n(65488),d=n(85162);const p={sidebar_position:3,description:"It covers the providers integration, finishing with the login and logout with your Metamask wallet provider."},h="Login with Metamask",g={unversionedId:"tutorials/login-metamask",id:"tutorials/login-metamask",title:"Login with Metamask",description:"It covers the providers integration, finishing with the login and logout with your Metamask wallet provider.",source:"@site/docs/tutorials/login-metamask.md",sourceDirName:"tutorials",slug:"/tutorials/login-metamask",permalink:"/docs/tutorials/login-metamask",draft:!1,editUrl:"https://github.com/nevermined-io/docs/tree/main/docs/tutorials/login-metamask.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"It covers the providers integration, finishing with the login and logout with your Metamask wallet provider."},sidebar:"tutorialSidebar",previous:{title:"How to create and consume your first assets in a React application integrated with Nevermined",permalink:"/docs/tutorials/assets"},next:{title:"Searching information in Nevermined",permalink:"/docs/tutorials/searching-information"}},f={},v=[{value:"Requirements",id:"requirements",level:2},{value:"How to install Catalog Provider",id:"how-to-install-catalog-provider",level:2},{value:"Add the Metamask provider",id:"add-the-metamask-provider",level:2},{value:"Add login component",id:"add-login-component",level:2},{value:"Config your network (optional)",id:"config-your-network-optional",level:2},{value:"Lets put everything together",id:"lets-put-everything-together",level:2},{value:"Demo",id:"demo",level:2}],k={toc:v};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"login-with-metamask"},"Login with Metamask"),(0,r.kt)("p",null,"In this tutorial you will learn how you can integrate Metamask provider from the Catalog in your dapp and implement operations like login and logout"),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"For the tutorial you will need:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A extension of ",(0,r.kt)("a",{parentName:"li",href:"https://metamask.io/"},"Metamask")," installed in the browser"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/"},"node")," and ",(0,r.kt)("a",{parentName:"li",href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},"npm")," need to be installed")),(0,r.kt)("h2",{id:"how-to-install-catalog-provider"},"How to install Catalog Provider"),(0,r.kt)("p",null,"Firstable to install ",(0,r.kt)("a",{parentName:"p",href:"/docs/catalog/providers/"},"Catalog Provider")," you just need to run:"),(0,r.kt)(u.Z,{mdxType:"Tabs"},(0,r.kt)(d.Z,{label:"yarn",value:"yarn",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @nevermined-io/catalog-providers\n"))),(0,r.kt)(d.Z,{label:"npm",value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @nevermined-io/catalog-providers\n")))),(0,r.kt)("h2",{id:"add-the-metamask-provider"},"Add the Metamask provider"),(0,r.kt)("p",null,"Now in our app we need to add the Metamask provider as a parent of all the components that will use functionalities from it"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Example from 'examples';\nimport { MetaMask } from '@nevermined-io/catalog-providers';\n\nReactDOM.render(\n    <div>\n        <MetaMask.WalletProvider\n            correctNetworkId=\"0x13881\"\n            nodeUri=\"https://matic-mumbai.chainstacklabs.com\"\n        >\n            ...\n        </MetaMask.WalletProvider>\n    </div>,\n    document.getElementById(\"root\") as HTMLElement\n);\n")),(0,r.kt)("h2",{id:"add-login-component"},"Add login component"),(0,r.kt)("p",null,"Let's create a component that contains a login button, which will login to the wallet once that it is clicked, and other button to logout"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const LoginMetaMask = () => {\n    const { loginMetamask, walletAddress, logout} = MetaMask.useWallet();\n\n    return (\n        <>\n            {!walletAddress ?\n              <button onClick={loginMetamask}>Connect to Metamask</button>\n              : \n              <>\n                <div>{walletAddress}</div>\n                <button onClick={logout}>Logout</button>\n              </>\n            }\n        </>\n    );\n};\n")),(0,r.kt)("p",null,"In this component we have the ",(0,r.kt)("inlineCode",{parentName:"p"},"loginMetamask")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"logout")," functions and the ",(0,r.kt)("inlineCode",{parentName:"p"},"walletAddress")," state, if ",(0,r.kt)("inlineCode",{parentName:"p"},"walletAddress")," is not empty means that the metamask is connected and will show the address and logout button otherwise will show the button to connect"),(0,r.kt)("h2",{id:"config-your-network-optional"},"Config your network (optional)"),(0,r.kt)("p",null,"At least that you need to set differents networks for your dapp than ",(0,r.kt)("a",{parentName:"p",href:"https://polygon.technology/"},"polygon")," this file is not needed, anyway here we show you how should look the config file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { zeroX } from '@nevermined-io/nevermined-sdk-js/dist/node/utils';\nimport { acceptedChainId } from 'config';\n\nconst mumbaiChainId = zeroX((80001).toString(16));\nconst mainnetChainId = zeroX((137).toString(16));\n\nconst ChainConfig = {\n  mumbai: {\n    chainId: mumbaiChainId,\n    chainName: 'Polygon Testnet Mumbai',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: [\n      'https://matic-mumbai.chainstacklabs.com',\n      'https://rpc-endpoints.superfluid.dev/mumbai'\n    ],\n    blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\n    iconUrls: ['https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png']\n  },\n  mainnet: {\n    chainId: mainnetChainId,\n    chainName: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://polygon-rpc.com'],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n    iconUrls: ['https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png']\n  },\n  returnConfig: (chainIdHex: string) => {\n    if (chainIdHex === mumbaiChainId) {\n      return ChainConfig.mumbai;\n    }\n    if (chainIdHex === mainnetChainId) {\n      return ChainConfig.mainnet;\n    }\n    return ChainConfig.mainnet;\n  }\n};\n\nexport default ChainConfig;\n")),(0,r.kt)("h2",{id:"lets-put-everything-together"},"Lets put everything together"),(0,r.kt)("p",null,"In order to finish we need to call this component inside of the Metamask provider, this is the complete example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MetaMask } from '@nevermined-io/catalog-providers';\nimport { zeroX } from '@nevermined-io/nevermined-sdk-js/dist/node/utils';\n\nconst mumbaiChainId = zeroX((80001).toString(16));\nconst mainnetChainId = zeroX((137).toString(16));\n\nconst ChainConfig = {\n  mumbai: {\n    chainId: mumbaiChainId,\n    chainName: 'Polygon Testnet Mumbai',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: [\n      'https://matic-mumbai.chainstacklabs.com',\n      'https://rpc-endpoints.superfluid.dev/mumbai'\n    ],\n    blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\n    iconUrls: ['https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png']\n  },\n  mainnet: {\n    chainId: mainnetChainId,\n    chainName: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://polygon-rpc.com'],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n    iconUrls: ['https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png']\n  },\n  returnConfig: (chainIdHex: string) => {\n    if (chainIdHex === mumbaiChainId) {\n      return ChainConfig.mumbai;\n    }\n    if (chainIdHex === mainnetChainId) {\n      return ChainConfig.mainnet;\n    }\n    return ChainConfig.mainnet;\n  }\n};\n\nconst LoginMetamask = () => {\n    const { loginMetamask, walletAddress, logout} = MetaMask.useWallet();\n\n    return (\n        <>\n            {!walletAddress ?\n              <button onClick={loginMetamask}>Connect to Metamask</button>\n              : \n              <>\n                <div>{walletAddress}</div>\n                <button onClick={logout}>Logout</button>\n              </>\n            }\n        </>\n    );\n};\n\nReactDOM.render(\n    <div>\n        <MetaMask.WalletProvider\n            externalChainConfig={ChainConfig}\n            correctNetworkId={mumbaiChainId}\n            nodeUri={ChainConfig.mainnet.rpcUrls[0]}\n        >\n          <LoginMetamask/>\n        </MetaMask.WalletProvider>\n    </div>,\n    document.getElementById(\"root\") as HTMLElement\n);\n")),(0,r.kt)("p",null,"This config file represent all the networks that your dapp support, and a default one where metamask will ask to switch in case that the wallet is in some not supported network"),(0,r.kt)("h2",{id:"demo"},"Demo"),(0,r.kt)(m,{mdxType:"MetamaskApp"}))}b.isMDXComponent=!0},34155:e=>{var t,n,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{n="function"==typeof clearTimeout?clearTimeout:r}catch(e){n=r}}();var l,s=[],c=!1,m=-1;function u(){c&&l&&(c=!1,l.length?s=l.concat(s):m=-1,s.length&&d())}function d(){if(!c){var e=i(u);c=!0;for(var t=s.length;t;){for(l=s,s=[];++m<t;)l&&l[m].run();m=-1,t=s.length}l=null,c=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===r||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new p(e,t)),1!==s.length||c||i(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=h,a.addListener=h,a.once=h,a.off=h,a.removeListener=h,a.removeAllListeners=h,a.emit=h,a.prependListener=h,a.prependOnceListener=h,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},88677:()=>{},62808:()=>{}}]);